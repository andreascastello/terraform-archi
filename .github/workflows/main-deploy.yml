name: Main Deploy - Scalingo Only

on:
  push:
    branches: [main]

jobs:
  deploy-scalingo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: andreascastello/integ-deploiement

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Scalingo CLI
        run: |
          curl -sSL https://cli-dl.scalingo.io/install.sh | bash
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Login to Scalingo
        run: |
          scalingo login --api-token ${{ secrets.SCALINGO_TOKEN }}

      - name: Setup Git for Scalingo
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Deploy React to Scalingo via Git
        run: |
          # Ajouter le remote Scalingo pour React
          scalingo --app react-frontend git-setup

          # Pousser vers Scalingo
          git push scalingo main

      - name: Deploy FastAPI to Scalingo via Git
        run: |
          # Créer un dossier temporaire pour FastAPI
          TEMP_DIR=$(mktemp -d)
          cp -r server/ $TEMP_DIR/
          cp requirements.txt $TEMP_DIR/
          cp server.py $TEMP_DIR/ 2>/dev/null || true
          cp vercel.py $TEMP_DIR/ 2>/dev/null || true

          # Créer un requirements.txt spécifique pour Scalingo si nécessaire
          if [ ! -f $TEMP_DIR/requirements.txt ]; then
            echo "fastapi==0.104.1" > $TEMP_DIR/requirements.txt
            echo "uvicorn==0.24.0" >> $TEMP_DIR/requirements.txt
            echo "python-multipart==0.0.6" >> $TEMP_DIR/requirements.txt
            echo "python-jose[cryptography]==3.3.0" >> $TEMP_DIR/requirements.txt
            echo "passlib[bcrypt]==1.7.4" >> $TEMP_DIR/requirements.txt
            echo "pymysql==1.1.0" >> $TEMP_DIR/requirements.txt
            echo "cryptography==41.0.7" >> $TEMP_DIR/requirements.txt
          fi

          # Créer un Procfile pour FastAPI
          echo "web: python server.py" > $TEMP_DIR/Procfile

          cd $TEMP_DIR
          git init
          git add .
          git commit -m "Deploy FastAPI"

          # Ajouter le remote Scalingo pour FastAPI
          scalingo --app fastapi-mysql-api git-setup
          git remote add scalingo $(scalingo --app fastapi-mysql-api git-show)

          # Pousser vers Scalingo
          git push scalingo main
